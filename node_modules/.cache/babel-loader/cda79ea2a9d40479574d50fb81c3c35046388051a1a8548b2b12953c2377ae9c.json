{"ast":null,"code":"var _jsxFileName = \"C:\\\\Django\\\\myenv\\\\3333\\\\frontend\\\\src\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport HeaderLinks from './HeaderLinks';\nimport Logo from './assets/mgilogo.png';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [hoverItem, setHoverItem] = useState(null);\n  const [categories, setCategories] = useState([]);\n\n  // Motion variants\n  const expandVariants = {\n    hidden: {\n      height: 0\n    },\n    visible: {\n      height: '50vh',\n      transition: {\n        duration: 0.5\n      }\n    }\n  };\n\n  // This function now properly handles both item name and categories\n  const handleHover = (itemName, itemCategories) => {\n    setHoverItem(itemName);\n    setCategories(itemCategories || []); // Fallback to an empty array if no categories\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light fixed-top\",\n      style: {\n        backgroundColor: hoverItem ? '#ffffff' : 'transparent'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\",\n          style: {\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(HeaderLinks, {\n          setHoverItem: handleHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"expandable-menu\",\n      initial: \"hidden\",\n      animate: hoverItem ? \"visible\" : \"hidden\",\n      variants: expandVariants,\n      style: {\n        backgroundColor: '#ffffff',\n        width: '100%',\n        position: 'fixed',\n        top: '56px',\n        zIndex: '10'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(Link, {\n        to: category.path,\n        className: \"dropdown-item\",\n        children: category.name\n      }, category.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"pCgiv7vMjFO/hrw3U1iHsmV9gt8=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","motion","HeaderLinks","Logo","Link","jsxDEV","_jsxDEV","Header","_s","hoverItem","setHoverItem","categories","setCategories","expandVariants","hidden","height","visible","transition","duration","handleHover","itemName","itemCategories","children","className","style","backgroundColor","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","animate","variants","width","position","top","zIndex","map","category","path","name","_c","$RefreshReg$"],"sources":["C:/Django/myenv/3333/frontend/src/Header.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport HeaderLinks from './HeaderLinks';\r\nimport Logo from './assets/mgilogo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  const [hoverItem, setHoverItem] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  // Motion variants\r\n  const expandVariants = {\r\n    hidden: { height: 0 },\r\n    visible: { \r\n      height: '50vh',\r\n      transition: { duration: 0.5 }\r\n    },\r\n  };\r\n\r\n  // This function now properly handles both item name and categories\r\n  const handleHover = (itemName, itemCategories) => {\r\n    setHoverItem(itemName);\r\n    setCategories(itemCategories || []); // Fallback to an empty array if no categories\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" \r\n           style={{ backgroundColor: hoverItem ? '#ffffff' : 'transparent' }}>\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <img src={Logo} alt=\"Logo\" style={{ height: '50px' }} />\r\n        </Link>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <HeaderLinks setHoverItem={handleHover} /> {/* Updated to use the new handler */}\r\n        </div>\r\n      </nav>\r\n      <motion.div\r\n        className=\"expandable-menu\"\r\n        initial=\"hidden\"\r\n        animate={hoverItem ? \"visible\" : \"hidden\"}\r\n        variants={expandVariants}\r\n        style={{ backgroundColor: '#ffffff', width: '100%', position: 'fixed', top: '56px', zIndex: '10' }}\r\n      >\r\n        {categories.map(category => (\r\n          <Link key={category.name} to={category.path} className=\"dropdown-item\">\r\n            {category.name}\r\n          </Link>\r\n        ))}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}